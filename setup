#!/data/user/0/com.termux/files/usr/bin/bash
function Coloring {
NC='\033[0m'
LRED='\033[1;31m'
LGREEN='\033[1;32m'
YELLOW='\033[1;33m'
PURPLE='\033[1;35m'
LBLUE='\033[1;36m'
}
# Define rainbow color code
colors=(
    "\033[31m"  # Red
    "\033[33m"  # Yellow
    "\033[32m"  # Green
    "\033[36m"  # Cyan
    "\033[34m"  # Blue
    "\033[35m"  # Magenta
)
# Reset color
reset="\033[0m"

# Function to print rainbow-colored text
rainbow() {
    local text="$1"
    local i
    local text_length=${#text}

    for ((i=0; i<text_length; i++)); do
        color_index=$((i % ${#colors[@]}))
        printf "${colors[$color_index]}${text:$i:1}"
    done
    printf "$reset\n"
}
# BANNER
banner() {
rainbow "============================================================"
toilet "$(figlet "CHEN2.0")" -f term --gay  | pv -qL 3000
rainbow "============================================================"
toilet "  𝗧𝗘𝗟𝗘𝗚𝗥𝗔𝗠 𝗖𝗛𝗔𝗡𝗡𝗘𝗟 @CHEN_TOOL  " -f term -F border --gay  | pv -qL 3000
toilet -f term -F gay "   𝗣𝗔𝗞 𝗠𝗔𝗣 𝗧𝗢𝗢𝗟 𝗣𝗥𝗘𝗠𝗜𝗨𝗠 " | pv -qL 2999
toilet -f term -F gay "   𝗚𝗔𝗠𝗘 𝗣𝗔𝗧𝗖𝗛 𝗠𝗔𝗣 " | pv -qL 2999
toilet -f term -F gay "   𝗖𝗢𝗣𝗬𝗥𝗜𝗚𝗛𝗧 @CHEN_TOOL " | pv -qL 2999
}

clear
Coloring
banner
sleep 0.2

quickbms_dir=$PREFIX/share/quickbms
if [ -f $HOME/CHEN2.0/CHEN ]; then
chmod +x $HOME/CHEN2.0/CHEN
mv $HOME/CHEN2.0/CHEN $PREFIX/bin
fi

function redirect {
toilet "   TOOL INSTALL DONE   " -f term -F border --gay  | pv -qL 3000

  count=0
  total=3
  start=`date +%s`
  while [ $count -lt $total ]
  do
    sleep 1 # this is work
    cur=`date +%s`
    count=$(( $count + 1 ))
    pd=$(( $count * 73 / $total ))
    runtime=$(( $cur-$start ))
    estremain=$(( ($runtime * $total / $count)-$runtime ))
    printf "\r%d.%d%% complete - est %d:%0.2d remaining\e[K" $(( $count*100/$total )) $(( ($count*1000/$total)%10)) $(( $estremain/60 )) $(( $estremain%60 ))
  done
  printf "\n"
if [ -f $HOME/CHEN2.0/setup ]; then
chmod +x chen1
chmod +x chen2
chmod +x chen3
chmod +x chen4
chmod +x chen5
chmod +x chen6
chmod +x non-chunk
chmod +x chunk
chmod +x unpack.bms
chmod +x unpack1.bms
chmod +x rani
./rani
fi
}
function quickbms_check {
echo -e "${LGREEN}Checking required program..${NC}"
FILE=$quickbms_dir/quickbms_4gb_files
if [ -f "$FILE" ]; then
echo -e "${LGREEN}Program has been installed.${NC}"
redirect
else
echo -e "${LRED}PROGRAM NOT FOUND.${NC}"
quickbms_install
redirect
fi
}

function quickbms_install {
echo -e "${LGREEN}Installing required program..${NC}"
sleep1
wget http://aluigi.altervista.org/papers/quickbms_linux.zip
sleep 1
unzip quickbms_linux.zip
sleep 1
mkdir $quickbms_dir
sleep 1
chmod +x quickbms_4gb_files quickbms
sleep 1
cp quickbms_4gb_files quickbms  $quickbms_dir
sleep 1
rm -rf quickbms*
}
toilet " CHECKING INSTALL TOOL " -f term -F border --gay  | pv -qL 3000
echo -e "${LGREEN}Checking Required packages${NC}"
packages=("wget" "unzip" "zip" "pv" "figlet" "toilet" "curl" "rsync" "x11-repo" "qemu-system-i386" "qemu-user-i386")
for pkg in ${packages[@]}; do
is_pkg_installed=$(dpkg-query -W --showformat='${Status}
' ${pkg} | grep "install ok installed")
if [ "${is_pkg_installed}" == "install ok installed" ]; then
echo -e ${LGREEN}${pkg}${NC} is installed.
else [ "" = "${is_pkg_installed}" ];
echo -e "${LRED}No ${pkg}. Setting up ${pkg}.${NC}"
pkg install ${pkg} -y
fi
done
quickbms_check
